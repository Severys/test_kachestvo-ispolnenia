@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.footer {
  display: flex;
  justify-content: space-around;
  align-items: center;
  background-color: #D87FF6;
  margin-top: 40px;
  height: 100px;
}
body {
  font-family: "Montserrat";
  font-weight: 400;
  font-size: 28px;
  color: #fff;
}

.container {
  max-width: 1170px;
  width: 100%;
  margin: 0 auto;
  padding: 0;
  height: auto;
  overflow: visible;
}

a {
  color: #fff;
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}

.btn {
  padding: 15px 25px;
  width: 262px;
  height: 58px;
  font-size: 24px;
  color: #fff;
  text-shadow: 2px 0 black, -2px 0 black, 0 2px black, 0 -2px black, 1px 1px black, -1px -1px black, 1px -1px black, -1px 1px black, 0px 4px 4px rgba(0, 0, 0, 0.25);
  border: none;
  border-radius: 25px;
  background-color: #FF4B4B;
  box-shadow: 2px 5px 10px #497957;
}

.header {
  display: flex;
  align-items: center;
  position: relative;
  justify-content: space-between;
  background-color: #B47FF6;
  height: 148px;
  padding: 0 55px 0 55px;
}
.header_nav {
  display: flex;
  gap: 60px;
}
@media screen and (max-width: 480px) {
  .header_nav {
    gap: 10px;
  }
}
.header_menu_list {
  display: none;
  list-style-type: none;
  position: absolute;
  background-color: #A6C9FF;
  border: 1px solid #00FF4A;
}
.header_menu_list.active {
  display: flex;
  flex-direction: column;
  gap: 39px;
  top: -29px;
  left: 0px;
  padding: 33px 64px 57px;
}
@media screen and (max-width: 480px) {
  .header_menu_list.active {
    padding: 16px 32px 24px;
  }
}
.header_burger {
  display: block;
  position: relative;
  top: 15px;
  width: 30px;
  height: 30px;
  transition: 0.3 s;
  z-index: 2;
  cursor: pointer;
}
.header_burger::before {
  content: "";
  position: absolute;
  background-color: white;
  width: 30px;
  height: 2px;
  top: -10px;
  transition: all 0.5s ease 0s;
}
.header_burger::after {
  content: "";
  position: absolute;
  background-color: white;
  width: 30px;
  height: 2px;
  top: 10px;
  transition: all 0.5s ease 0s;
}
.header_burger span {
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: white;
  transition: all 0.5s ease 0s;
}
.header_burger.active span {
  transform: scale(0);
}
.header_burger.active::after {
  transform: rotate(30deg);
  top: 0px;
  background-color: white;
}
.header_burger.active::before {
  transform: rotate(-30deg);
  top: 0px;
  background-color: white;
}

.main {
  background-color: #A6C9FF;
  padding-top: 40px;
  display: flex;
  flex-direction: column;
}
.main_slider {
  width: 100%;
  background-color: #7029CB;
  position: relative;
}
.main_slider::before {
  content: "";
  width: 40px;
  height: 77px;
  background-color: wheat;
  background: url(./image/vector.svg) no-repeat;
  top: 35px;
  left: 50px;
  position: absolute;
}
@media screen and (max-width: 760px) {
  .main_slider::before {
    left: 25px;
  }
}
@media screen and (max-width: 480px) {
  .main_slider::before {
    display: none;
  }
}
.main_slider::after {
  content: "";
  width: 40px;
  height: 77px;
  background-color: wheat;
  background: url(./image/vector.svg) no-repeat;
  transform: rotate(180deg);
  top: 35px;
  right: 50px;
  position: absolute;
}
@media screen and (max-width: 760px) {
  .main_slider::after {
    right: 25px;
  }
}
@media screen and (max-width: 480px) {
  .main_slider::after {
    display: none;
  }
}
.main_slider_item {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 32px;
}
@media screen and (max-width: 760px) {
  .main_slider_item {
    flex-direction: column;
    align-items: center;
    gap: 16px;
    padding-bottom: 10px;
  }
  .main_slider_item h1 {
    margin: 0;
  }
}
.main h2 {
  text-align: center;
}
.main_gallery {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: 198px 198px;
  gap: 13px;
  background-color: #BEB9FF;
}
@media screen and (max-width: 480px) {
  .main_gallery {
    display: flex;
    flex-direction: column;
  }
}
.main_gallery > div {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #3ADE4B;
}
.main_gallery > div::after {
  content: "1";
  font-size: 64px;
}
@media screen and (max-width: 480px) {
  .main_gallery > div {
    height: 198px;
  }
}
.main_gallery_1 {
  grid-column-start: 1;
  grid-column-end: 3;
}
.main_gallery_2 {
  grid-column-start: 3;
  grid-column-end: 8;
}
.main_gallery_3 {
  grid-column-start: 1;
  grid-column-end: 7;
}
.main_gallery_4 {
  grid-column-start: 7;
  grid-column-end: 8;
}
.main_review {
  display: flex;
  background-color: #D4FF5A;
  margin: 0 25px 0 25px;
  border-radius: 30px;
  padding: 25px;
  justify-content: space-evenly;
  gap: 20px;
  align-self: center;
}
@media screen and (max-width: 1000px) {
  .main_review {
    flex-wrap: wrap;
    align-items: center;
    width: 50%;
  }
}
.main_review_item {
  width: 198px;
  aspect-ratio: 1/1;
  background-color: #497957;
  border-radius: 35px;
  border: 2px solid #00FF4A;
}
.main_review_item:hover {
  box-shadow: 2px 5px 10px #497957;
}
@media screen and (max-width: 1000px) {
  .main_review_item {
    width: 198px;
  }
}
.main_utp {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Модальный (фон) */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100vw; /* Полная ширина */
  height: 100vh; /* Полная высота */
  overflow: hidden; /* Включите прокрутку, если это необходимо */
  background-color: rgb(0, 0, 0); /* Цвет запасной вариант */
  background-color: rgba(0, 0, 0, 0.4); /* Черный с непрозрачностью */
  vertical-align: middle;
}

/* Модальное содержание/коробка */
.modal-content {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: white;
  background-color: #A6C9FF;
  padding: 20px;
  width: 400px;
  height: 400px;
}
@media screen and (max-width: 480px) {
  .modal-content {
    width: 250px;
    height: 250px;
  }
}

/* Кнопка закрытия */
.close {
  position: absolute;
  top: 10%;
  right: 10%;
  color: white;
  background-color: #497957;
  font-size: 28px;
  font-weight: bold;
  padding: 9px 15px;
  border-radius: 5px;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
